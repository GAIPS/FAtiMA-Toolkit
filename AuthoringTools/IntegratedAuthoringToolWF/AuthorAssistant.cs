using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace IntegratedAuthoringToolWF
{
    static class AuthorAssistant
    {
        static Dictionary<string, List<string>> tips = new Dictionary<string, List<string>>()
        {
            {
                "Default", new List<string>()
                {
                     "Remember to save using Ctr+S",
                    "Check fatima-toolkit.eu website for more",
                    "Rules are applied to every agent",
                    "An agent perceives events in the environment which represent changes in the world around an agent"
                }
            },
            {
                "Emotional Appraisal", new List<string>()
                {
                     "FAtiMA is based on the OCC Model of emotions",
                    "Emotions represented valenced reactions to events in the world. They are generated by an appraisal process."
                }
            },

            {
                "Emotional Decision Making", new List<string>()
                {
                     "Define the actions of the agents through decision making rules",
                     "Use the beliefs set in the internal state of the agents for example: \n Is(banana, fruit) = True \n Dialogue(State) = Start"
                     
                }
            }


        };


        public static string GetTip(int tabIndex, int assetIndex)
        {
            switch(tabIndex)
            {
                case 0:
                    return GetTipByKey("Default");

                case 1:
                    switch (assetIndex)
                    {
                        case 0:
                            return GetTipByKey("Emotional Appraisal");
                        case 1:
                            return GetTipByKey("Emotional Decision Making");

                        default:
                            return GetRandomTip();

                    }
            
             
                default:
                    return GetTipByKey("Default");

            }
          
        }

        public static string GetTipByKey(string key)
        {
            int rand = new Random().Next(0, tips[key].Count);
            return tips[key][rand];
        }

        public static string GetRandomTip()
        {
            var allTips = tips.SelectMany(x => x.Value).ToList();
            int rand = new Random().Next(0, tips.Count);
            return allTips[rand];
        }

    }
}
